

#include <ansi.h>
#include <net/dns.h>

inherit F_CLEAN_UP;
string *faction_name = ({

});
int sort_user(object,object);
int help();

void create() { seteuid(getuid()); }

mixed main(object me, string arg, int remote)
{
        string name, str, *option;
        object *list, *ob, ob1;
        int i, j, ppl_cnt, fac_no, fac_amt = sizeof(faction_name);
        int opt_long, opt_wiz, opt_party;

        if( arg ) {
                option = explode(arg, " ");
                i = sizeof(option);
                while( i-- )
                        switch(option[i]) {
                                case "-h": return help();
                                case "-l": opt_long = 1;        break;
                                case "-w": opt_wiz = 1;         break;
                                case "-p": opt_party = 1;       break;
                                default:
                                        if( wizardp(me)
                                        &&      option[i][0]=='*' ) {
                                                RWHO_Q->send_rwho_q(option[i][1..sizeof(option[i])],
                                                        me, opt_long);
                                                write("ÍøÂ·Ñ¶Ï¢ÒÑËÍ³ö£¬ÇëÉÔºò¡£\n");
                                                return 1;
                                        }
                                        ob1 = present(option[i], environment(me));
                                        if (!ob1) ob1 = find_player(option[i]);
                                        if (!ob1) ob1 = find_living(option[i]);
                                        if (!ob1) return notify_fail("Ã»ÓĞÕâ¸öÍæ¼Ò»ò²ÎÊı´íÎó¡£\nÖ¸Áî¸ñÊ½ : who [-h] [-l] [-w] [-p] [<ID>]\n");
                                        me = ob1; opt_party = 1;
                        }
        }


        if( opt_long && !wizardp(me)) {
                if( (int)me->query("jing") < 5 )
                        return notify_fail("ÄãµÄ¾«ÉñÌ«²îÁË£¬Ã»ÓĞ°ì·¨µÃÖªÆäËûÍæ¼ÒµÄÏêÏ¸×ÊÁÏ¡£\n");
                me->receive_damage("jing", 5);
        }

        str = HIY+"´óÌÆÎ÷ÓÎ"+HIW+" Ö® Î÷°²Õ¾" NOR;
        if(opt_party)
                if(me->query("family/family_name"))
                        str += HIR+"("+me->query("family/family_name")+") "+NOR;
                else str += HIR + "(ÎŞÃÅÅÉ) " + NOR;
        if ( opt_wiz )
                str += "Î×Ê¦£º";
        else
                if ( opt_long ) str += "Íæ¼ÒÓĞ£º";
                else str += "×ÜÈËÎïÓĞ£º";

        str += "\n";
        str +=
                HIC"¡Ô"+HIY"©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤"HIC"¡Ô\n"NOR;
        ob = filter_array(objects(), (: userp :));
        if (opt_party) {
               ob = filter_array(ob, (: $1->query("family/family_name") ==
                        $2->query("family/family_name") :), me);
                        }
        list = sort_array(ob, (: sort_user :));
        ppl_cnt = 0;
        if( opt_long )
        {
               for (fac_no=0; fac_no<fac_amt; fac_no++)
               {
                       i = sizeof(list);
                       while ( i-- )
                       {
                                // Skip those users in login limbo.
                                if( !environment(list[i]) ) continue;
                                if( !wizardp(me) && !me->visible(list[i]) ) continue;
                                if( interactive(list[i]) )
                                ppl_cnt++;
                                if( list[i]->query("family/family_name") == faction_name[fac_no])
                                        str = sprintf("%s%12s%s%s\n",
                                                str,
                                                RANK_D->query_rank(list[i]),
                                                interactive(list[i])?(query_idle(list[i]) > 120? HIG "*" NOR:" "):HIR "#" NOR,
                                                list[i]->short(1));
                        }
                }
                i = sizeof(list);
                while ( i-- )
                {
                        // Skip those users in login limbo.
                        if( !environment(list[i]) ) continue;
                        if( !wizardp(me) && !me->visible(list[i]) ) continue;
                        if( interactive(list[i]) )
                        ppl_cnt++;
                        if(!list[i]->query("family") )
                                str = sprintf("%s%12s%s%s\n",
                                        str,
                                        RANK_D->query_rank(list[i]),
                                        interactive(list[i])?(query_idle(list[i]) > 120? HIG "*" NOR:" "):HIR "#" NOR,
                                        list[i]->short(1));
                }
        } else
                if( opt_wiz )
                {
                        i = sizeof(list);
                        while( i-- )
                        {
                                // Skip those users in login limbo.
                                if( !environment(list[i]) ) continue;
                                if( !wizardp(me) && !me->visible(list[i]) ) continue;
                                if (interactive(list[i]))
                                ppl_cnt++;
                                if (!wizardp(list[i]) ) continue;
                                str = sprintf("%s%12s%s%s\n",
                                        str,
                                        RANK_D->query_rank(list[i]),
                                        interactive(list[i])?(query_idle(list[i]) > 120? HIG "*" NOR:" "):HIR "#" NOR,
                                        list[i]->short(1));
                        }
                } else
                {
                i = sizeof(list);
                while ( i-- )
                        {
                        // Skip those users in login limbo.
                        if ( !environment(list[i]) ) continue;
                        if ( !wizardp(me) && !me->visible(list[i]) ) continue;
                        if( interactive(list[i]) && wizardp(list[i]))
                                        name = sprintf( "%s"HIM"%-10s(%-11s"HIY"©¦",
                                                        " ",
                                                        list[i]->name(1),
                                                        capitalize(list[i]->query("id"))+")");
                        else if( interactive(list[i]) && query_idle(list[i]) > 150)
                                        name = sprintf( "%s%-10s(%-11s"HIY"©¦",
                                                        HIG"*"HIW,
                                                        list[i]->name(1),
                                                        capitalize(list[i]->query("id"))+")");
                        else if(list[i]->query_temp("netdead"))
                                        name = sprintf( "%s%-10s(%-11s"HIY"©¦",
                                                        HIR"#"HIW,
                                                        list[i]->name(1),
                                                        capitalize(list[i]->query("id"))+")");
                        else
                                        name = sprintf( HIW"%s%-10s(%-11s"HIY"©¦",
                                                        " ",
                                                       list[i]->name(1),
                                                        capitalize(list[i]->query("id"))+")");
                                        str = sprintf("%s%25s%s", str, name,
                                                ppl_cnt%3==2?"\n":"");
//                                        if (interactive(list[i]))
                                                ppl_cnt++;
                }
                if ( ppl_cnt%3 ) str += "\n";
        }

        str += HIC"¡Ô"+HIY"©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤©¤"HIC"¡Ô\n"NOR;
        str = sprintf("%s¹²ÓĞ %s Î»Ê¹ÓÃÕßÁ¬ÏßÖĞ£¬ÏµÍ³¸ºµ££º%s\n "HIG"*"NOR" ±íÊ¾·¢´ôÖĞ£¬"HIR"#"NOR" ±íÊ¾¶ÏÏßÖĞ¡£", str, CHINESE_D->chinese_number(sizeof(list))
                query_load_average())
//      if( remote ) return str
//      write(str + "\n")
        me->start_more(str)
        return 1
int sort_user(object ob1, object ob2
        if( wizardp(ob1) && !wizardp(ob2) ) return -1
        if( wizardp(ob2) && !wizardp(ob1) ) return 1
        if( wizardp(ob1) && wizardp(ob2) 
                return (int)SECURITY_D->get_wiz_level(ob2)
                        - (int)SECURITY_D->get_wiz_level(ob1)
       
        return (int)ob2->query("family/generation") - (int)ob1->query("family/generation")
int help(
//write(@HEL
write(
Ö¸Áî¸ñÊ½ : who [-h] [-l] [-w] [-p] [<ID>
Õâ¸öÖ¸Áî¿ÉÒÔÁĞ³öËùÓĞÔÚÏßÉÏµÄÍæ¼Ò¼°ÆäµÈ¼¶¡
-h ÁĞ³ö°ïÖúÆÁÄ»¡
-l Ñ¡ÏîÁĞ³ö½Ï³¤µÄÑ¶Ï¢¡
-p Ö»ÁĞ³öÍ¬ÃÅµÄÍæ¼Ò¡
-w Ö»ÁĞ³öÏßÉÏËùÓĞµÄÎ×Ê¦¡
<ID> ÁĞ³ö<ID>´ú±íÍæ¼ÒËùÊôÃÅÅÉµÄÍæ¼Ò¡
"HIG"*"NOR" ±íÊ¾"HIG"·¢´ô"NOR"ÖĞ£¬"HIR"#"NOR" ±íÊ¾"HIR"¶ÏÏß"NOR"ÖĞ¡
Ïà¹ØÖ¸Áî£º finge
    )
    return 1
update who2.c
